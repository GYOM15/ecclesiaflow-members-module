openapi: 3.1.1
info:
  title: EcclesiaFlow Members API
  description: |
    API de gestion des membres pour la plateforme EcclesiaFlow

    **Architecture Multi-Tenant:**
    - Chaque tenant représente une église
    - Les pasteurs sont les administrateurs de leur tenant
    - Un super admin gère tous les tenants

    **Fonctionnalités principales:**
    - Gestion complète des profils membres (CRUD)
    - Système de confirmation par email avec codes temporaires
    - Gestion sécurisée des mots de passe
    - Notifications email automatisées
    - Validation stricte des données d'entrée

    **Version supportée:**
    - v1: `application/vnd.ecclesiaflow.members.v1+json`
  version: 1.0.0
  contact:
    name: EcclesiaFlow Team
    email: dev@ecclesiaflow.com
    url: https://ecclesiaflow.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Serveur de développement
  - url: https://staging.ecclesiaflow.com
    description: Serveur de staging
  - url: https://api.ecclesiaflow.com
    description: Serveur de production

security:
  - BearerAuth: []

paths:
  /ecclesiaflow/hello:
    get:
      tags:
        - Members (Temporary)
      summary: Message de bienvenue pour les membres
      description: Endpoint de test pour les membres authentifiés
      operationId: sayHello
      responses:
        '200':
          description: Message de bienvenue
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Token d'authentification invalide ou manquant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Erreur interne du serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      security:
        - BearerAuth: []

  /ecclesiaflow/members:
    get:
      tags:
        - Members Management
      summary: Lister tous les membres
      description: |
        Récupère la liste de tous les membres avec pagination et filtrage optionnel.

        **Fonctionnalités:**
        - Pagination par page et taille
        - Filtrage par statut de confirmation
        - Recherche par nom ou email
        - Tri par différents critères
      operationId: getAllMembers
      parameters:
        - name: page
          in: query
          description: Numéro de page (commence à 0)
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            example: 0
        - name: size
          in: query
          description: Taille de la page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            example: 20
        - name: search
          in: query
          description: Recherche par nom ou email
          required: false
          schema:
            type: string
            example: "jean"
        - name: confirmed
          in: query
          description: Filtrer par statut de confirmation
          required: false
          schema:
            type: boolean
            example: true
        - name: sort
          in: query
          description: Critère de tri
          required: false
          schema:
            type: string
            enum: [firstName, lastName, email, createdAt]
            default: createdAt
            example: lastName
        - name: direction
          in: query
          description: Direction du tri
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
            example: asc
      responses:
        '200':
          description: Liste des membres récupérée avec succès
          content:
            application/vnd.ecclesiaflow.members.v1+json:
              schema:
                $ref: '#/components/schemas/MemberPageResponseV1'
        '400':
          description: Paramètres de requête invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: Token d'authentification invalide ou manquant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Permissions insuffisantes pour accéder aux membres
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '500':
          description: Erreur interne du serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    post:
      tags:
        - Members Management
      summary: Créer un nouveau membre
      description: |
        Crée un nouveau membre dans le système.

        **Processus:**
        1. Validation des données d'entrée
        2. Vérification de l'unicité de l'email
        3. Création du membre avec statut "non confirmé"
        4. Génération automatique d'un code de confirmation
        5. Envoi d'un email de confirmation

        **Note:** Le membre devra confirmer son compte via email avant de pouvoir se connecter.
      operationId: createMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequestPayload'
            examples:
              basic_member:
                summary: Membre basique
                value:
                  firstName: "Jean"
                  lastName: "Dupont"
                  email: "jean.dupont@example.com"
                  address: "123 Rue de la Paix, Montréal, H3A 1B2"
              complete_member:
                summary: Membre avec informations complètes
                value:
                  firstName: "Marie"
                  lastName: "Martin"
                  email: "marie.martin@example.com"
                  address: "456 Avenue des Érables, Québec, G1R 2S3"
                  phoneNumber: "+1-514-555-0123"
      responses:
        '201':
          description: Membre créé avec succès
          headers:
            Location:
              description: URL du nouveau membre créé
              schema:
                type: string
          content:
            application/vnd.ecclesiaflow.members.v1+json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
        '400':
          description: Données d'entrée invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '409':
          description: Un membre avec cette adresse email existe déjà
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '500':
          description: Erreur interne du serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /ecclesiaflow/members/{memberId}:
    get:
      tags:
        - Members Management
      summary: Obtenir les détails d'un membre
      description: |
        Récupère les informations détaillées d'un membre spécifique.

        **Informations incluses:**
        - Profil complet du membre
        - Statut de confirmation
        - Dates de création et mise à jour
        - Historique des confirmations
      operationId: getMemberById
      parameters:
        - name: memberId
          in: path
          description: Identifiant unique du membre (UUID)
          required: true
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Détails du membre récupérés avec succès
          content:
            application/vnd.ecclesiaflow.members.v1+json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
        '404':
          description: Membre introuvable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erreur interne du serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    patch:
      tags:
        - Members Management
      summary: Mettre à jour partiellement un membre
      description: |
        Met à jour partiellement les informations d'un membre existant.

        **Champs modifiables:**
        - Nom et prénom
        - Adresse
        - Numéro de téléphone

        **Restrictions:**
        - L'email ne peut pas être modifié via cette API
        - Le statut de confirmation ne peut pas être changé
        - Seuls les champs fournis sont mis à jour (mise à jour partielle)
      operationId: updateMemberPartially
      parameters:
        - name: memberId
          in: path
          description: Identifiant unique du membre
          required: true
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberRequestPayload'
      responses:
        '200':
          description: Membre mis à jour avec succès
          content:
            application/vnd.ecclesiaflow.members.v1+json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
        '400':
          description: Données d'entrée invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Membre introuvable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erreur interne du serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'


  /ecclesiaflow/members/{memberId}/confirmation:
    post:
      tags:
        - Member Confirmation
      summary: Confirmer le compte d'un membre
      description: |
        Confirmer l'inscription d'un membre avec le code reçu par email.
        Génère un token temporaire pour définir le mot de passe.

        **Processus de confirmation:**
        1. Validation du code de confirmation
        2. Activation du compte membre
        3. Génération d'un token temporaire
        4. Retour du token pour définir le mot de passe
      operationId: confirmMember
      parameters:
        - name: memberId
          in: path
          description: Identifiant unique du membre
          required: true
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationRequestPayload'
            examples:
              valid_code:
                summary: Code valide
                value:
                  code: "123456"
      responses:
        '200':
          description: Compte confirmé avec succès, token temporaire généré
          content:
            application/vnd.ecclesiaflow.members.v1+json:
              schema:
                $ref: '#/components/schemas/ConfirmationResponse'
        '400':
          description: Code de confirmation invalide ou expiré
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Membre introuvable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '409':
          description: Membre déjà confirmé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '429':
          description: Trop de tentatives de renvoi (rate limiting)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
        '500':
          description: Erreur interne du serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /ecclesiaflow/members/{memberId}/confirmation-code:
    post:
      tags:
        - Member Confirmation
      summary: Renvoyer le code de confirmation
      description: |
        Renvoie le code de confirmation actuel par email.
        Réutilise le code existant s'il est encore valide ou génère un nouveau code si l'ancien est expiré.

        **Processus de renvoi:**
        1. Vérification de l'existence du membre
        2. Vérification que le compte n'est pas déjà confirmé
        3. Génération d'un nouveau code si nécessaire
        4. Envoi du code par email
        5. Limitation des abus avec rate limiting
      operationId: resendConfirmationCode
      parameters:
        - name: memberId
          in: path
          description: Identifiant unique du membre
          required: true
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Code de confirmation renvoyé avec succès
          content:
            application/vnd.ecclesiaflow.members.v1+json:
              schema:
                $ref: '#/components/schemas/ConfirmationResponse'
        '400':
          description: Code de confirmation invalide ou expiré
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Membre introuvable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '409':
          description: Membre déjà confirmé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '500':
          description: Erreur interne du serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'



components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Token JWT d'authentification obtenu via le module d'authentification.

        **Format:** `Authorization: Bearer <token>`

        **Obtention:** Utilisez l'API d'authentification EcclesiaFlow

  schemas:
    # Request Schemas
    SignUpRequestPayload:
      type: object
      description: "Données d'inscription d'un nouveau membre EcclesiaFlow"
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
          description: "Prénom du membre"
          minLength: 2
          maxLength: 50
          example: "Jean"
        lastName:
          type: string
          description: "Nom de famille du membre"
          minLength: 2
          maxLength: 50
          example: "Dupont"
        email:
          type: string
          format: email
          description: "Adresse email du membre (doit être unique)"
          maxLength: 100
          example: "jean.dupont@example.com"
        address:
          type: string
          description: "Adresse physique du membre (optionnelle)"
          minLength: 10
          maxLength: 200
          example: "123 Rue de la Paix, 75001 Paris"
        phoneNumber:
          type: string
          description: "Numéro de téléphone au format international (optionnel)"
          pattern: "^\\+?[1-9]\\d{1,14}$"
          example: "+33123456789"

    UpdateMemberRequestPayload:
      type: object
      description: "Données de mise à jour d'un membre (tous les champs sont optionnels)"
      properties:
        firstName:
          type: string
          description: "Nouveau prénom du membre"
          maxLength: 50
          example: "Jean"
        lastName:
          type: string
          description: "Nouveau nom de famille du membre"
          maxLength: 50
          example: "Martin"
        email:
          type: string
          format: email
          description: "Nouvelle adresse email du membre"
          maxLength: 100
          example: "jean.martin@example.com"
        address:
          type: string
          description: "Nouvelle adresse physique du membre"
          maxLength: 200
          example: "456 Avenue des Champs, 75008 Paris"
        phoneNumber:
          type: string
          description: "Nouveau numéro de téléphone au format international"
          pattern: "^\\+?[1-9]\\d{1,14}$"
          example: "+33987654321"

    ConfirmationRequestPayload:
      type: object
      description: "Code de confirmation à 6 chiffres pour valider l'adresse email"
      required:
        - code
      properties:
        code:
          type: string
          description: "Code de confirmation à 6 chiffres reçu par email"
          pattern: "\\d{6}"
          minLength: 6
          maxLength: 6
          example: "123456"



    # Response Schemas
    SignUpResponse:
      type: object
      description: "Réponse contenant les informations d'un membre EcclesiaFlow"
      properties:
        message:
          type: string
          description: "Message informatif pour l'utilisateur (optionnel)"
          example: "Inscription réussie"
        email:
          type: string
          format: email
          description: "Adresse email du membre"
          example: "jean.dupont@example.com"
        firstName:
          type: string
          description: "Prénom du membre"
          example: "Jean"
        lastName:
          type: string
          description: "Nom de famille du membre"
          example: "Dupont"
        address:
          type: string
          description: "Adresse physique du membre (optionnelle)"
          example: "123 Rue de la Paix, 75001 Paris"
        role:
          type: string
          description: "Rôle du membre dans l'application"
          example: "MEMBER"
        token:
          type: string
          description: "Token d'authentification (si applicable)"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        confirmed:
          type: boolean
          description: "Indique si le compte a été confirmé par email"
          example: false
        createdAt:
          type: string
          description: "Date de création du compte (format ISO)"
          example: "2024-01-15T10:30:00Z"
        confirmedAt:
          type: string
          description: "Date de confirmation du compte (format ISO)"
          example: "2024-01-15T10:45:00Z"

    MemberPageResponseV1:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/SignUpResponse'
        totalCount:
          type: integer
          example: 157
        page:
          type: integer
          example: 0
        size:
          type: integer
          example: 20

    ConfirmationResponse:
      type: object
      description: "Réponse après confirmation réussie d'un compte membre"
      properties:
        message:
          type: string
          description: "Message de confirmation pour l'utilisateur"
          example: "Compte confirmé avec succès. Vous pouvez maintenant définir votre mot de passe."
        temporaryToken:
          type: string
          description: "Token temporaire pour définir le mot de passe"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        expiresIn:
          type: integer
          format: int64
          description: "Durée de validité du token temporaire en secondes"
          example: 3600

    # Error Response Schemas
    ApiErrorResponse:
      type: object
      required:
        - timestamp
        - status
        - error
        - message
        - path
      properties:
        timestamp:
          type: string
          format: date-time
          description: Horodatage de l'erreur
          example: "2024-01-15T10:30:00Z"
        status:
          type: integer
          description: Code de statut HTTP
          example: 400
        error:
          type: string
          description: Type d'erreur HTTP
          example: "Bad Request"
        message:
          type: string
          description: Message d'erreur détaillé
          example: "Erreur de validation des données"
        path:
          type: string
          description: Chemin de la requête
          example: "/ecclesiaflow/members"
        errors:
          type: array
          description: Liste des erreurs de validation détaillées
          items:
            $ref: '#/components/schemas/ValidationError'

    # Specific Error Schemas
    BadRequestError:
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
        - type: object
          properties:
            status:
              example: 400
            error:
              example: "Bad Request"
            message:
              example: "Les données fournies sont invalides ou malformées"
            errors:
              type: array
              description: Liste des erreurs de validation détaillées
              items:
                $ref: '#/components/schemas/ValidationError'
              minItems: 1

    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
        - type: object
          properties:
            status:
              example: 401
            error:
              example: "Unauthorized"
            message:
              example: "Authentification requise pour accéder à cette ressource"
            errors:
              description: Not applicable to this error type.
              type: "null"

    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
        - type: object
          properties:
            status:
              example: 403
            error:
              example: "Forbidden"
            message:
              example: "Permissions insuffisantes pour effectuer cette action"
            errors:
              description: Not applicable to this error type.
              type: "null"

    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
        - type: object
          properties:
            status:
              example: 404
            error:
              example: "Not Found"
            message:
              example: "La ressource demandée n'existe pas"
            errors:
              description: Not applicable to this error type.
              type: "null"

    ConflictError:
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
        - type: object
          properties:
            status:
              example: 409
            error:
              example: "Conflict"
            message:
              example: "Conflit avec l'état actuel de la ressource"
            errors:
              description: Not applicable to this error type.
              type: "null"

    TooManyRequestsError:
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
        - type: object
          properties:
            status:
              example: 429
            error:
              example: "Too Many Requests"
            message:
              example: "Trop de requêtes. Veuillez réessayer plus tard"
            errors:
              description: Not applicable to this error type.
              type: "null"

    InternalServerError:
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
        - type: object
          properties:
            status:
              example: 500
            error:
              example: "Internal Server Error"
            message:
              example: "Une erreur interne du serveur s'est produite"
            errors:
              description: Not applicable to this error type.
              type: "null"

    ValidationError:
      type: object
      required:
        - message
        - path
        - type
        - code
      properties:
        message:
          type: string
          description: Message d'erreur
          example: "L'email est obligatoire"
        path:
          type: string
          description: Chemin du champ en erreur
          example: "email"
        type:
          type: string
          description: Type d'erreur
          example: "validation"
        expected:
          type: string
          description: Type ou valeur attendue
          example: "string"
        received:
          type: string
          description: Valeur reçue
          example: "null"
        code:
          type: string
          description: Code d'erreur
          example: "NotBlank"
        line:
          type: integer
          description: Numéro de ligne (pour les erreurs JSON)
          example: 6
        column:
          type: integer
          description: Numéro de colonne (pour les erreurs JSON)
          example: 15

    # Schéma de compatibilité pour les anciennes versions
    ErrorResponse:
      type: object
      deprecated: true
      description: "DEPRECATED: Utilisez ApiErrorResponse à la place"
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Code d'erreur
          example: "MEMBER_NOT_FOUND"
        message:
          type: string
          description: Message d'erreur lisible
          example: "Le membre avec l'ID spécifié n'existe pas"
        timestamp:
          type: string
          format: date-time
          description: Horodatage de l'erreur
          example: "2024-01-15T10:30:00Z"
        path:
          type: string
          description: Chemin de la requête qui a causé l'erreur
          example: "/members/invalid-id"

tags:
  - name: Members Management
    description: |
      Opérations de gestion des membres

      **Responsabilités:**
      - Création, lecture, mise à jour et suppression des membres
      - Gestion des profils membres
      - Recherche et filtrage des membres
      - Pagination des résultats

  - name: Member Confirmation
    description: |
      Système de confirmation des comptes membres

      **Processus:**
      - Génération de codes de confirmation temporaires
      - Envoi par email avec modèles personnalisés
      - Validation des codes avec gestion d'expiration
      - Activation des comptes après confirmation

      **Sécurité:**
      - Codes à 6 chiffres avec expiration (15 minutes)
      - Rate limiting pour prévenir les abus
      - Tentatives limitées de validation